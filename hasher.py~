#!/usr/bin/python3
#large file
import hashlib
path  = '/usr/txt/merlin/dictionaryAttack/dictionary1.txt'
file1 = open('/usr/txt/merlin/dictionaryAttack/dictionary1.txt', 'r')
count = 0
def computeMD5hash(my_string):
    print(my_string)
    m = hashlib.md5()
    m.update(my_string.strip().encode('utf-8'))
    return m.hexdigest()

import itertools
with open(path) as f:
    for i in range(61268100):
        next(f)
    for line in f:
        print(line)
        dsd = computeMD5hash(line)
        print(dsd)
        if dsd == "3a8b7b53ab2be90f457869961f475aab":
            print("Correct\(line)",dsd,line)
            break

#large file        
file1 = open(path, 'r')
count = 0
counter = 61268204
file1.seek(counter)
line = file1.readline()
#print(line)

while False:
    count += 1

    # Get next line from file
    line = file1.readline()
    # if line is empty
    # end of file is reached
    if not line:
        break
    from test import *
    dsx = computeMD5hash(line)
    print(line)
    counter += 1
    print(dsx)
    print(counter)
    if dsx == "3a8b7b53ab2be90f457869961f475aab":
        print("Correct\(line)",type(dsx))
        file1.close()
        
file1.close()
# convert
                                        
                                        


#import itertools
#with open(path) as f:
#    for line1,line2,line3,line4,line5,line6,line7,line8,line9,line10,line11,line12,line13,line14,line15,line16,line17,line18,line19,line20 in itertools.zip_longest(*[f]*20):
#        print("e",line1,'\n', line2, '\n', line3,'\n',line4,line5,line6,line7,line8,line9,line10,line11,line12,line13,line14,line15,line16,line17,line18,line19,line20)

